### Setup benchmarks

set(BENCHES

	"math"
	"string"
	"array"
	"memory"
	"map"
	"sort"
	"set"
	"regex"
)

## Create and build all benches
foreach(BENCH ${BENCHES})
	
	set(PRIVATE_FILE "bench_${BENCH}.cpp")
	set(PUBLIC_FILE "bench_${BENCH}.h")
	
	## Create private file if necessary
	get_filename_component(PRIVATE_FILE ${PRIVATE_FILE} ABSOLUTE)
	if(NOT EXISTS ${PRIVATE_FILE})
	
		file(WRITE ${PRIVATE_FILE}
		
			"#include \"bench_${BENCH}.h\"\n"
			"\n"
			"BENCHMARK_MAIN();\n"
			"\n"
		)
		
	endif()
	
	## Same for public file
	get_filename_component(PUBLIC_FILE ${PUBLIC_FILE} ABSOLUTE)
	if(NOT EXISTS ${PUBLIC_FILE})
	
		file(WRITE ${PUBLIC_FILE}
		
			"#pragma once\n"
			"\n"
			"#include \"benchmark/benchmark.h\"\n"
			"#include \"./bench_util.h\"\n"
			"\n"
			"/**\n"
			" * \n"
			" */\n"
			"void bench(benchmark::State & state)\n"
			"{\n"
			"\tfor (auto _ : state)\n"
			"\t{\n"
			"\t\t// Test body\n"
			"\t}\n"
			"}\n"
			"\n"
			"BENCHMARK(bench);\n"
		)
		
	endif()

	## Create executable
	set(TARGET_NAME ${PROJECT_NAME}-bench_${BENCH})
	add_executable(${TARGET_NAME}
	
		${PUBLIC_FILE}
		${PRIVATE_FILE}
	)

	## Link main library
	target_link_libraries(${TARGET_NAME}

		${PROJECT_NAME}
		benchmark
	)

	## Create make target
	add_custom_target(bench_${BENCH}

		COMMAND				$<TARGET_FILE:${TARGET_NAME}>
		DEPENDS				${TARGET_NAME}
		WORKING_DIRECTORY	${PROJECT_SOURCE_DIR}
	)

endforeach()

### Create target to run all benchmarks
	
set(PRIVATE_FILE "bench_all.gen.cpp")
set(PUBLIC_FILE "bench_all.gen.h")

## Generate files that includes all benchmarks
get_filename_component(PRIVATE_FILE ${PRIVATE_FILE} ABSOLUTE)
file(WRITE ${PRIVATE_FILE}

	"/*================================================\n"
	"	This file was automatically generated by CMake\n"
	"================================================*/\n"
	"\n"
	"#include \"${PUBLIC_FILE}\"\n"
	"\n"
	"BENCHMARK_MAIN();\n"
	"\n"
)

get_filename_component(PUBLIC_FILE ${PUBLIC_FILE} ABSOLUTE)
file(WRITE ${PUBLIC_FILE}

	"/*================================================\n"
	"	This file was automatically generated by CMake\n"
	"================================================*/\n"
	"\n"
	"#pragma once\n"
	"\n"
	"#include \"benchmark/benchmark.h\"\n"
	"\n"
)

## Append all test units public files
foreach(BENCH ${BENCHES})
	
	set(BENCH_PUBLIC_FILE "bench_${BENCH}.h")
	list(APPEND BENCH_PUBLIC_FILES ${BENCH_PUBLIC_FILE}) # Watch for changes
	file(APPEND ${PUBLIC_FILE}
	
		"#include \"${BENCH_PUBLIC_FILE}\"\n"
	)

endforeach()

## Create executable for all units
set(TARGET_NAME ${PROJECT_NAME}-bench_all)
add_executable(${TARGET_NAME}

	${PRIVATE_FILE}
	${PUBLIC_FILE}
	${BENCH_PUBLIC_FILES}
)

## Link SGL library
target_link_libraries(${TARGET_NAME}

	${PROJECT_NAME}
	benchmark
)

## Create make target
add_custom_target(bench_all

	COMMAND				$<TARGET_FILE:${TARGET_NAME}>
	DEPENDS				${TARGET_NAME}
	WORKING_DIRECTORY	${PROJECT_SOURCE_DIR}
)
