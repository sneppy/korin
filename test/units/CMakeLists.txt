### Setup unit tests

set(UNITS

	# No units
)

list(LENGTH UNIT NUM_UNITS)

## Create and build all units
foreach(UNIT ${UNITS})
	
	## Create executable
	set(TARGET_NAME ${PROJECT_NAME}-test_${UNIT})
	add_executable(${TARGET_NAME}

		"test_${UNIT}.cpp"
		"test_${UNIT}.h"
	)

	## Link SGL library
	target_link_libraries(${TARGET_NAME}

		${PROJECT_NAME}
		gtest_main
		${CMAKE_THREAD_LIBS_INIT}
	)

	## Create make target
	add_custom_target(test_${UNIT}

		COMMAND				<$TARGET_PROPERTY:${TARGET_NAME},RUNTIME_OUTPUT_DIRECTORY>
		DEPENDS				${TARGET_NAME}
		WORKING_DIRECTORY	${PROJECT_SOURCE_DIR}
	)

endforeach(UNIT in UNITS)

### Create target to run all test units

## Generate header file that includes all units
file(WRITE "test_all.gen.h"

	"/*================================================\n"
	"	This file was automatically generated by CMake\n"
	"================================================*/\n"
	"\n"
	"#pragma once\n"
	"\n"		
)
foreach(UNIT ${UNITS})
	
	set(PUBLIC_FILE "test_${UNIT}.h")
	list(APPEND PUBLIC_FILES ${PUBLIC_FILE}) # Watch for changes
	file(APPEND "test_all.gen.h"
	
		"#include \"${PUBLIC_FILE}\""
	)

endforeach(UNIT ${UNITS})

## Create executable for all units
set(TARGET_NAME ${PROJECT_NAME}-test_${UNIT})
add_executable(${TARGET_NAME}

	"test_all.cpp"
	${PUBLIC_FILES}
)

## Link SGL library
target_link_libraries(${TARGET_NAME}

	${PROJECT_NAME}
	gtest_main
	${CMAKE_THREAD_LIBS_INIT}
)

## Create make target
add_custom_target(test_${UNIT}

	COMMAND				<$TARGET_PROPERTY:${TARGET_NAME},RUNTIME_OUTPUT_DIRECTORY>
	DEPENDS				${TARGET_NAME}
	WORKING_DIRECTORY	${PROJECT_SOURCE_DIR}
)
